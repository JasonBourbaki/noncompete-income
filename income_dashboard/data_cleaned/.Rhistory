shinyApp(ui = ui, server = server)
server <- function(input, output) {
# Filter by the state selected by the user and condense occupation categories
# to only those selected by the user
selected_occ_data <- reactive({
hist_occ_data %>% filter(state == input$state_selector) %>%
mutate(Occupation = case_when(occ_category %in% input$occupation_selector ~ occ_category,
TRUE ~ "Other Occupations")) %>%
mutate(Occupation = factor(Occupation, ordered = TRUE,
levels = c(input$occupation_selector, "Other Occupations")))
})
# Filter by state, quantile, and occupations selected
excluded_occ_income <- reactive({
occ_income_summary %>% ungroup() %>%
filter(state == input$state_selector,
occ_category %in% input$occupation_selector,
quantile == as.integer(as.numeric(input$income_percent)*40) + 1) %>%
select(occ_category, median_income, share_quantile) %>%
mutate(share_quantile = percent(share_quantile, accuracy = 0.1)) %>%
rename(Occupations = occ_category, "Median Income" = median_income,
"Share of Workers" = share_quantile)
})
selected_demo_data <- reactive({
demo_summary %>% filter(state == input$state_selector,
quantile == as.integer(as.numeric(input$income_percent)*40) + 1)
})
selected_income_cutoff <- reactive({selected_demo_data()$income_cutoff[1]})
selected_sex <- reactive({
selected_demo_data() %>% select(M, `F`) %>%
pivot_longer(cols = everything(), names_to = "Sex", values_to = "Share") %>%
mutate(Sex = factor(Sex, ordered = TRUE, levels = c("F", "M")),
dummy = as.character(row_number()))
})
selected_age <- reactive({
selected_demo_data() %>% select(5:9) %>%
pivot_longer(cols = everything(), names_to = "Age", values_to = "Share") %>%
mutate(Age = factor(Age, ordered = TRUE, levels = c("65 and above", "45-64", "35-44", "25-34", "16-24")),
dummy = as.character(row_number()))
})
selected_race <- reactive({
selected_demo_data() %>% select(10:15) %>%
pivot_longer(cols = everything(), names_to = "Race", values_to = "Share") %>%
mutate(Race = factor(Race, ordered = TRUE, levels = c("Native American", "Other race", "Multi-racial",
"Asian and Pacific Islander", "African American", "White")),
dummy = as.character(row_number()))
})
selected_edu <- reactive({
selected_demo_data() %>% select(16:18) %>%
pivot_longer(cols = everything(), names_to = "Education", values_to = "Share") %>%
mutate(Education = factor(Education, ordered = TRUE, levels = c("Bachelor's or above", "Some college",
"High school or below")),
dummy = as.character(row_number()))
})
income_cutoff <- reactive({})
output$description <- renderText(
"This dashboard tracks the occupational and demographic breakdown of each U.S. state above a given income threshold:
1. The first tab displays the distribution of selected occupations across the income distribution.
2. The second tab shows the median incomes and workforce share of selected occupations above the income threshold.
3. The third tab illustrates the sex, age, race, and education composition of all workers above the income threshold."
)
output$plot_dist <- renderPlot(
ggplot(selected_occ_data(), aes(fill = Occupation, x = percentile, y = share_quantile)) +
geom_bar(position = "fill", stat = "identity", just = 1) +
geom_vline(xintercept = as.numeric(input$income_percent), linetype="solid", size=0.8) +
geom_text(aes(x = as.numeric(input$income_percent) - 0.02, y = 1.05,
label = paste0(as.character(as.numeric(input$income_percent) * 100), "%")),
stat = "unique", size = 3) +
geom_text(aes(x = as.numeric(input$income_percent) + 0.04, y = 1.05,
label = paste0("$", label_comma(accuracy = 1)(selected_income_cutoff()))),
stat = "unique", size = 3) +
geom_rect(xmin = 0, xmax = as.numeric(input$income_percent), ymin = 0, ymax = 1,
fill = "grey", alpha = 0.01) +
ylab("Share of Workers in the Income Bin") +
xlab("Weighted Income Percentile") + theme_bw() +
scale_fill_manual(values = eig_palette((length(input$occupation_selector) + 1), eig_colors))
)
output$tbl_inc <- renderTable(
excluded_occ_income()
)
output$plots_dem <- renderPlot({
plot_sex <- ggplot(selected_sex(), aes(x = Share, y = Sex, fill = dummy)) +
geom_bar(stat = "identity") + geom_text(aes(label = percent(Share, accuracy = 0.1)), hjust = -0.02) +
theme_bw() + scale_fill_manual(values = eig_palette(nrow(selected_sex()), eig_colors)) +
theme(legend.position = "none") + xlim(0,1)
plot_age <- ggplot(selected_age(), aes(x = Share, y = Age, fill = dummy)) +
geom_bar(stat = "identity") + geom_text(aes(label = percent(Share, accuracy = 0.1)), hjust = -0.02) +
theme_bw() + scale_fill_manual(values = eig_palette(nrow(selected_age()), eig_colors)) +
theme(legend.position = "none") + xlim(0,1)
plot_race <- ggplot(selected_race(), aes(x = Share, y = Race, fill = dummy)) +
geom_bar(stat = "identity") + geom_text(aes(label = percent(Share, accuracy = 0.1)), hjust = -0.02) +
theme_bw() + scale_fill_manual(values = eig_palette(nrow(selected_race()), eig_colors)) +
theme(legend.position = "none") + xlim(0,1)
plot_edu <- ggplot(selected_edu(), aes(x = Share, y = Education, fill = dummy)) +
geom_bar(stat = "identity") + geom_text(aes(label = percent(Share, accuracy = 0.1)), hjust = -0.02) +
theme_bw() + scale_fill_manual(values = eig_palette(nrow(selected_edu()), eig_colors)) +
theme(legend.position = "none") + xlim(0,1)
plot_grid(plot_sex, plot_age, plot_race, plot_edu, ncol = 1, align = "v", axis = "lr")
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
# Filter by the state selected by the user and condense occupation categories
# to only those selected by the user
selected_occ_data <- reactive({
hist_occ_data %>% filter(state == input$state_selector) %>%
mutate(Occupation = case_when(occ_category %in% input$occupation_selector ~ occ_category,
TRUE ~ "Other Occupations")) %>%
mutate(Occupation = factor(Occupation, ordered = TRUE,
levels = c(input$occupation_selector, "Other Occupations")))
})
# Filter by state, quantile, and occupations selected
excluded_occ_income <- reactive({
occ_income_summary %>% ungroup() %>%
filter(state == input$state_selector,
occ_category %in% input$occupation_selector,
quantile == as.integer(as.numeric(input$income_percent)*40) + 1) %>%
select(occ_category, median_income, share_quantile) %>%
mutate(share_quantile = percent(share_quantile, accuracy = 0.1)) %>%
rename(Occupations = occ_category, "Median Income" = median_income,
"Share of Workers" = share_quantile)
})
selected_demo_data <- reactive({
demo_summary %>% filter(state == input$state_selector,
quantile == as.integer(as.numeric(input$income_percent)*40) + 1)
})
selected_income_cutoff <- reactive({
demo_summary %>% filter(state == input$state_selector,
quantile == as.integer(as.numeric(input$income_percent)*40)) %>%
.$income_cutoff[1]})
selected_sex <- reactive({
selected_demo_data() %>% select(M, `F`) %>%
pivot_longer(cols = everything(), names_to = "Sex", values_to = "Share") %>%
mutate(Sex = factor(Sex, ordered = TRUE, levels = c("F", "M")),
dummy = as.character(row_number()))
})
selected_age <- reactive({
selected_demo_data() %>% select(5:9) %>%
pivot_longer(cols = everything(), names_to = "Age", values_to = "Share") %>%
mutate(Age = factor(Age, ordered = TRUE, levels = c("65 and above", "45-64", "35-44", "25-34", "16-24")),
dummy = as.character(row_number()))
})
selected_race <- reactive({
selected_demo_data() %>% select(10:15) %>%
pivot_longer(cols = everything(), names_to = "Race", values_to = "Share") %>%
mutate(Race = factor(Race, ordered = TRUE, levels = c("Native American", "Other race", "Multi-racial",
"Asian and Pacific Islander", "African American", "White")),
dummy = as.character(row_number()))
})
selected_edu <- reactive({
selected_demo_data() %>% select(16:18) %>%
pivot_longer(cols = everything(), names_to = "Education", values_to = "Share") %>%
mutate(Education = factor(Education, ordered = TRUE, levels = c("Bachelor's or above", "Some college",
"High school or below")),
dummy = as.character(row_number()))
})
income_cutoff <- reactive({})
output$description <- renderText(
"This dashboard tracks the occupational and demographic breakdown of each U.S. state above a given income threshold:
1. The first tab displays the distribution of selected occupations across the income distribution.
2. The second tab shows the median incomes and workforce share of selected occupations above the income threshold.
3. The third tab illustrates the sex, age, race, and education composition of all workers above the income threshold."
)
output$plot_dist <- renderPlot(
ggplot(selected_occ_data(), aes(fill = Occupation, x = percentile, y = share_quantile)) +
geom_bar(position = "fill", stat = "identity", just = 1) +
geom_vline(xintercept = as.numeric(input$income_percent), linetype="solid", size=0.8) +
geom_text(aes(x = as.numeric(input$income_percent) - 0.02, y = 1.05,
label = paste0(as.character(as.numeric(input$income_percent) * 100), "%")),
stat = "unique", size = 3) +
geom_text(aes(x = as.numeric(input$income_percent) + 0.04, y = 1.05,
label = paste0("$", label_comma(accuracy = 1)(selected_income_cutoff()))),
stat = "unique", size = 3) +
geom_rect(xmin = 0, xmax = as.numeric(input$income_percent), ymin = 0, ymax = 1,
fill = "grey", alpha = 0.01) +
ylab("Share of Workers in the Income Bin") +
xlab("Weighted Income Percentile") + theme_bw() +
scale_fill_manual(values = eig_palette((length(input$occupation_selector) + 1), eig_colors))
)
output$tbl_inc <- renderTable(
excluded_occ_income()
)
output$plots_dem <- renderPlot({
plot_sex <- ggplot(selected_sex(), aes(x = Share, y = Sex, fill = dummy)) +
geom_bar(stat = "identity") + geom_text(aes(label = percent(Share, accuracy = 0.1)), hjust = -0.02) +
theme_bw() + scale_fill_manual(values = eig_palette(nrow(selected_sex()), eig_colors)) +
theme(legend.position = "none") + xlim(0,1)
plot_age <- ggplot(selected_age(), aes(x = Share, y = Age, fill = dummy)) +
geom_bar(stat = "identity") + geom_text(aes(label = percent(Share, accuracy = 0.1)), hjust = -0.02) +
theme_bw() + scale_fill_manual(values = eig_palette(nrow(selected_age()), eig_colors)) +
theme(legend.position = "none") + xlim(0,1)
plot_race <- ggplot(selected_race(), aes(x = Share, y = Race, fill = dummy)) +
geom_bar(stat = "identity") + geom_text(aes(label = percent(Share, accuracy = 0.1)), hjust = -0.02) +
theme_bw() + scale_fill_manual(values = eig_palette(nrow(selected_race()), eig_colors)) +
theme(legend.position = "none") + xlim(0,1)
plot_edu <- ggplot(selected_edu(), aes(x = Share, y = Education, fill = dummy)) +
geom_bar(stat = "identity") + geom_text(aes(label = percent(Share, accuracy = 0.1)), hjust = -0.02) +
theme_bw() + scale_fill_manual(values = eig_palette(nrow(selected_edu()), eig_colors)) +
theme(legend.position = "none") + xlim(0,1)
plot_grid(plot_sex, plot_age, plot_race, plot_edu, ncol = 1, align = "v", axis = "lr")
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
# Filter by the state selected by the user and condense occupation categories
# to only those selected by the user
selected_occ_data <- reactive({
hist_occ_data %>% filter(state == input$state_selector) %>%
mutate(Occupation = case_when(occ_category %in% input$occupation_selector ~ occ_category,
TRUE ~ "Other Occupations")) %>%
mutate(Occupation = factor(Occupation, ordered = TRUE,
levels = c(input$occupation_selector, "Other Occupations")))
})
# Filter by state, quantile, and occupations selected
excluded_occ_income <- reactive({
occ_income_summary %>% ungroup() %>%
filter(state == input$state_selector,
occ_category %in% input$occupation_selector,
quantile == as.integer(as.numeric(input$income_percent)*40) + 1) %>%
select(occ_category, median_income, share_quantile) %>%
mutate(share_quantile = percent(share_quantile, accuracy = 0.1)) %>%
rename(Occupations = occ_category, "Median Income" = median_income,
"Share of Workers" = share_quantile)
})
selected_demo_data <- reactive({
demo_summary %>% filter(state == input$state_selector,
quantile == as.integer(as.numeric(input$income_percent)*40) + 1)
})
selected_income_cutoff <- reactive({
demo_summary %>% filter(state == input$state_selector,
quantile == as.integer(as.numeric(input$income_percent)*40)) %>%
.$income_cutoff})
selected_sex <- reactive({
selected_demo_data() %>% select(M, `F`) %>%
pivot_longer(cols = everything(), names_to = "Sex", values_to = "Share") %>%
mutate(Sex = factor(Sex, ordered = TRUE, levels = c("F", "M")),
dummy = as.character(row_number()))
})
selected_age <- reactive({
selected_demo_data() %>% select(5:9) %>%
pivot_longer(cols = everything(), names_to = "Age", values_to = "Share") %>%
mutate(Age = factor(Age, ordered = TRUE, levels = c("65 and above", "45-64", "35-44", "25-34", "16-24")),
dummy = as.character(row_number()))
})
selected_race <- reactive({
selected_demo_data() %>% select(10:15) %>%
pivot_longer(cols = everything(), names_to = "Race", values_to = "Share") %>%
mutate(Race = factor(Race, ordered = TRUE, levels = c("Native American", "Other race", "Multi-racial",
"Asian and Pacific Islander", "African American", "White")),
dummy = as.character(row_number()))
})
selected_edu <- reactive({
selected_demo_data() %>% select(16:18) %>%
pivot_longer(cols = everything(), names_to = "Education", values_to = "Share") %>%
mutate(Education = factor(Education, ordered = TRUE, levels = c("Bachelor's or above", "Some college",
"High school or below")),
dummy = as.character(row_number()))
})
income_cutoff <- reactive({})
output$description <- renderText(
"This dashboard tracks the occupational and demographic breakdown of each U.S. state above a given income threshold:
1. The first tab displays the distribution of selected occupations across the income distribution.
2. The second tab shows the median incomes and workforce share of selected occupations above the income threshold.
3. The third tab illustrates the sex, age, race, and education composition of all workers above the income threshold."
)
output$plot_dist <- renderPlot(
ggplot(selected_occ_data(), aes(fill = Occupation, x = percentile, y = share_quantile)) +
geom_bar(position = "fill", stat = "identity", just = 1) +
geom_vline(xintercept = as.numeric(input$income_percent), linetype="solid", size=0.8) +
geom_text(aes(x = as.numeric(input$income_percent) - 0.02, y = 1.05,
label = paste0(as.character(as.numeric(input$income_percent) * 100), "%")),
stat = "unique", size = 3) +
geom_text(aes(x = as.numeric(input$income_percent) + 0.04, y = 1.05,
label = paste0("$", label_comma(accuracy = 1)(selected_income_cutoff()))),
stat = "unique", size = 3) +
geom_rect(xmin = 0, xmax = as.numeric(input$income_percent), ymin = 0, ymax = 1,
fill = "grey", alpha = 0.01) +
ylab("Share of Workers in the Income Bin") +
xlab("Weighted Income Percentile") + theme_bw() +
scale_fill_manual(values = eig_palette((length(input$occupation_selector) + 1), eig_colors))
)
output$tbl_inc <- renderTable(
excluded_occ_income()
)
output$plots_dem <- renderPlot({
plot_sex <- ggplot(selected_sex(), aes(x = Share, y = Sex, fill = dummy)) +
geom_bar(stat = "identity") + geom_text(aes(label = percent(Share, accuracy = 0.1)), hjust = -0.02) +
theme_bw() + scale_fill_manual(values = eig_palette(nrow(selected_sex()), eig_colors)) +
theme(legend.position = "none") + xlim(0,1)
plot_age <- ggplot(selected_age(), aes(x = Share, y = Age, fill = dummy)) +
geom_bar(stat = "identity") + geom_text(aes(label = percent(Share, accuracy = 0.1)), hjust = -0.02) +
theme_bw() + scale_fill_manual(values = eig_palette(nrow(selected_age()), eig_colors)) +
theme(legend.position = "none") + xlim(0,1)
plot_race <- ggplot(selected_race(), aes(x = Share, y = Race, fill = dummy)) +
geom_bar(stat = "identity") + geom_text(aes(label = percent(Share, accuracy = 0.1)), hjust = -0.02) +
theme_bw() + scale_fill_manual(values = eig_palette(nrow(selected_race()), eig_colors)) +
theme(legend.position = "none") + xlim(0,1)
plot_edu <- ggplot(selected_edu(), aes(x = Share, y = Education, fill = dummy)) +
geom_bar(stat = "identity") + geom_text(aes(label = percent(Share, accuracy = 0.1)), hjust = -0.02) +
theme_bw() + scale_fill_manual(values = eig_palette(nrow(selected_edu()), eig_colors)) +
theme(legend.position = "none") + xlim(0,1)
plot_grid(plot_sex, plot_age, plot_race, plot_edu, ncol = 1, align = "v", axis = "lr")
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
# Filter by the state selected by the user and condense occupation categories
# to only those selected by the user
selected_occ_data <- reactive({
hist_occ_data %>% filter(state == input$state_selector) %>%
mutate(Occupation = case_when(occ_category %in% input$occupation_selector ~ occ_category,
TRUE ~ "Other Occupations")) %>%
mutate(Occupation = factor(Occupation, ordered = TRUE,
levels = c(input$occupation_selector, "Other Occupations")))
})
# Filter by state, quantile, and occupations selected
excluded_occ_income <- reactive({
occ_income_summary %>% ungroup() %>%
filter(state == input$state_selector,
occ_category %in% input$occupation_selector,
quantile == as.integer(as.numeric(input$income_percent)*40) + 1) %>%
select(occ_category, median_income, share_quantile) %>%
mutate(share_quantile = percent(share_quantile, accuracy = 0.1)) %>%
rename(Occupations = occ_category, "Median Income" = median_income,
"Share of Workers" = share_quantile)
})
selected_demo_data <- reactive({
demo_summary %>% filter(state == input$state_selector,
quantile == as.integer(as.numeric(input$income_percent)*40) + 1)
})
selected_income_cutoff <- reactive({
demo_summary %>% filter(state == input$state_selector,
quantile == as.integer(as.numeric(input$income_percent)*40)) %>%
.$income_cutoff})
selected_sex <- reactive({
selected_demo_data() %>% select(M, `F`) %>%
pivot_longer(cols = everything(), names_to = "Sex", values_to = "Share") %>%
mutate(Sex = factor(Sex, ordered = TRUE, levels = c("F", "M")),
dummy = as.character(row_number()))
})
selected_age <- reactive({
selected_demo_data() %>% select(5:9) %>%
pivot_longer(cols = everything(), names_to = "Age", values_to = "Share") %>%
mutate(Age = factor(Age, ordered = TRUE, levels = c("65 and above", "45-64", "35-44", "25-34", "16-24")),
dummy = as.character(row_number()))
})
selected_race <- reactive({
selected_demo_data() %>% select(10:15) %>%
pivot_longer(cols = everything(), names_to = "Race", values_to = "Share") %>%
mutate(Race = factor(Race, ordered = TRUE, levels = c("Native American", "Other race", "Multi-racial",
"Asian and Pacific Islander", "African American", "White")),
dummy = as.character(row_number()))
})
selected_edu <- reactive({
selected_demo_data() %>% select(16:18) %>%
pivot_longer(cols = everything(), names_to = "Education", values_to = "Share") %>%
mutate(Education = factor(Education, ordered = TRUE, levels = c("Bachelor's or above", "Some college",
"High school or below")),
dummy = as.character(row_number()))
})
income_cutoff <- reactive({})
output$description <- renderText(
"This dashboard tracks the occupational and demographic breakdown of each U.S. state above a given income threshold:
1. The first tab displays the distribution of selected occupations across the income distribution.
2. The second tab shows the median incomes and workforce share of selected occupations above the income threshold.
3. The third tab illustrates the sex, age, race, and education composition of all workers above the income threshold."
)
output$plot_dist <- renderPlot(
ggplot(selected_occ_data(), aes(fill = Occupation, x = percentile, y = share_quantile)) +
geom_bar(position = "fill", stat = "identity", just = 1) +
geom_vline(xintercept = as.numeric(input$income_percent), linetype="solid", size=0.8) +
geom_text(aes(x = as.numeric(input$income_percent) - 0.02, y = 1.05,
label = paste0(as.character(as.numeric(input$income_percent) * 100), "%")),
stat = "unique", size = 3) +
geom_text(aes(x = as.numeric(input$income_percent) + 0.03, y = 1.05,
label = paste0("$", label_comma(accuracy = 1)(selected_income_cutoff()))),
stat = "unique", size = 3) +
geom_rect(xmin = 0, xmax = as.numeric(input$income_percent), ymin = 0, ymax = 1,
fill = "grey", alpha = 0.01) +
ylab("Share of Workers in the Income Bin") +
xlab("Weighted Income Percentile") + theme_bw() +
scale_fill_manual(values = eig_palette((length(input$occupation_selector) + 1), eig_colors))
)
output$tbl_inc <- renderTable(
excluded_occ_income()
)
output$plots_dem <- renderPlot({
plot_sex <- ggplot(selected_sex(), aes(x = Share, y = Sex, fill = dummy)) +
geom_bar(stat = "identity") + geom_text(aes(label = percent(Share, accuracy = 0.1)), hjust = -0.02) +
theme_bw() + scale_fill_manual(values = eig_palette(nrow(selected_sex()), eig_colors)) +
theme(legend.position = "none") + xlim(0,1)
plot_age <- ggplot(selected_age(), aes(x = Share, y = Age, fill = dummy)) +
geom_bar(stat = "identity") + geom_text(aes(label = percent(Share, accuracy = 0.1)), hjust = -0.02) +
theme_bw() + scale_fill_manual(values = eig_palette(nrow(selected_age()), eig_colors)) +
theme(legend.position = "none") + xlim(0,1)
plot_race <- ggplot(selected_race(), aes(x = Share, y = Race, fill = dummy)) +
geom_bar(stat = "identity") + geom_text(aes(label = percent(Share, accuracy = 0.1)), hjust = -0.02) +
theme_bw() + scale_fill_manual(values = eig_palette(nrow(selected_race()), eig_colors)) +
theme(legend.position = "none") + xlim(0,1)
plot_edu <- ggplot(selected_edu(), aes(x = Share, y = Education, fill = dummy)) +
geom_bar(stat = "identity") + geom_text(aes(label = percent(Share, accuracy = 0.1)), hjust = -0.02) +
theme_bw() + scale_fill_manual(values = eig_palette(nrow(selected_edu()), eig_colors)) +
theme(legend.position = "none") + xlim(0,1)
plot_grid(plot_sex, plot_age, plot_race, plot_edu, ncol = 1, align = "v", axis = "lr")
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
# Filter by the state selected by the user and condense occupation categories
# to only those selected by the user
selected_occ_data <- reactive({
hist_occ_data %>% filter(state == input$state_selector) %>%
mutate(Occupation = case_when(occ_category %in% input$occupation_selector ~ occ_category,
TRUE ~ "Other Occupations")) %>%
mutate(Occupation = factor(Occupation, ordered = TRUE,
levels = c(input$occupation_selector, "Other Occupations")))
})
# Filter by state, quantile, and occupations selected
excluded_occ_income <- reactive({
occ_income_summary %>% ungroup() %>%
filter(state == input$state_selector,
occ_category %in% input$occupation_selector,
quantile == as.integer(as.numeric(input$income_percent)*40) + 1) %>%
select(occ_category, median_income, share_quantile) %>%
mutate(share_quantile = percent(share_quantile, accuracy = 0.1)) %>%
rename(Occupations = occ_category, "Median Income" = median_income,
"Share of Workers" = share_quantile)
})
selected_demo_data <- reactive({
demo_summary %>% filter(state == input$state_selector,
quantile == as.integer(as.numeric(input$income_percent)*40) + 1)
})
selected_income_cutoff <- reactive({
demo_summary %>% filter(state == input$state_selector,
quantile == as.integer(as.numeric(input$income_percent)*40)) %>%
.$income_cutoff})
selected_sex <- reactive({
selected_demo_data() %>% select(M, `F`) %>%
pivot_longer(cols = everything(), names_to = "Sex", values_to = "Share") %>%
mutate(Sex = factor(Sex, ordered = TRUE, levels = c("F", "M")),
dummy = as.character(row_number()))
})
selected_age <- reactive({
selected_demo_data() %>% select(5:9) %>%
pivot_longer(cols = everything(), names_to = "Age", values_to = "Share") %>%
mutate(Age = factor(Age, ordered = TRUE, levels = c("65 and above", "45-64", "35-44", "25-34", "16-24")),
dummy = as.character(row_number()))
})
selected_race <- reactive({
selected_demo_data() %>% select(10:15) %>%
pivot_longer(cols = everything(), names_to = "Race", values_to = "Share") %>%
mutate(Race = factor(Race, ordered = TRUE, levels = c("Native American", "Other race", "Multi-racial",
"Asian and Pacific Islander", "African American", "White")),
dummy = as.character(row_number()))
})
selected_edu <- reactive({
selected_demo_data() %>% select(16:18) %>%
pivot_longer(cols = everything(), names_to = "Education", values_to = "Share") %>%
mutate(Education = factor(Education, ordered = TRUE, levels = c("Bachelor's or above", "Some college",
"High school or below")),
dummy = as.character(row_number()))
})
income_cutoff <- reactive({})
output$description <- renderText(
"This dashboard tracks the occupational and demographic breakdown of each U.S. state above a given income threshold:
1. The first tab displays the distribution of selected occupations across the income distribution.
2. The second tab shows the median incomes and workforce share of selected occupations above the income threshold.
3. The third tab illustrates the sex, age, race, and education composition of all workers above the income threshold."
)
output$plot_dist <- renderPlot(
ggplot(selected_occ_data(), aes(fill = Occupation, x = percentile, y = share_quantile)) +
geom_bar(position = "fill", stat = "identity", just = 1) +
geom_vline(xintercept = as.numeric(input$income_percent), linetype="solid", size=0.8) +
geom_text(aes(x = as.numeric(input$income_percent) - 0.02, y = 1.05,
label = paste0(as.character(as.numeric(input$income_percent) * 100), "%")),
stat = "unique", size = 3) +
geom_text(aes(x = as.numeric(input$income_percent) + 0.033, y = 1.05,
label = paste0("$", label_comma(accuracy = 1)(selected_income_cutoff()))),
stat = "unique", size = 3) +
geom_rect(xmin = 0, xmax = as.numeric(input$income_percent), ymin = 0, ymax = 1,
fill = "grey", alpha = 0.01) +
ylab("Share of Workers in the Income Bin") +
xlab("Weighted Income Percentile") + theme_bw() +
scale_fill_manual(values = eig_palette((length(input$occupation_selector) + 1), eig_colors))
)
output$tbl_inc <- renderTable(
excluded_occ_income()
)
output$plots_dem <- renderPlot({
plot_sex <- ggplot(selected_sex(), aes(x = Share, y = Sex, fill = dummy)) +
geom_bar(stat = "identity") + geom_text(aes(label = percent(Share, accuracy = 0.1)), hjust = -0.02) +
theme_bw() + scale_fill_manual(values = eig_palette(nrow(selected_sex()), eig_colors)) +
theme(legend.position = "none") + xlim(0,1)
plot_age <- ggplot(selected_age(), aes(x = Share, y = Age, fill = dummy)) +
geom_bar(stat = "identity") + geom_text(aes(label = percent(Share, accuracy = 0.1)), hjust = -0.02) +
theme_bw() + scale_fill_manual(values = eig_palette(nrow(selected_age()), eig_colors)) +
theme(legend.position = "none") + xlim(0,1)
plot_race <- ggplot(selected_race(), aes(x = Share, y = Race, fill = dummy)) +
geom_bar(stat = "identity") + geom_text(aes(label = percent(Share, accuracy = 0.1)), hjust = -0.02) +
theme_bw() + scale_fill_manual(values = eig_palette(nrow(selected_race()), eig_colors)) +
theme(legend.position = "none") + xlim(0,1)
plot_edu <- ggplot(selected_edu(), aes(x = Share, y = Education, fill = dummy)) +
geom_bar(stat = "identity") + geom_text(aes(label = percent(Share, accuracy = 0.1)), hjust = -0.02) +
theme_bw() + scale_fill_manual(values = eig_palette(nrow(selected_edu()), eig_colors)) +
theme(legend.position = "none") + xlim(0,1)
plot_grid(plot_sex, plot_age, plot_race, plot_edu, ncol = 1, align = "v", axis = "lr")
})
}
shinyApp(ui = ui, server = server)
deployApp("/Users/jiaxinhe/Documents/projects/noncompete-income/income_dashboard")
deployApp("/Users/jiaxinhe/Documents/projects/noncompete-income/income_dashboard")
View(occ_income_summary)
deployApp("/Users/jiaxinhe/Documents/projects/noncompete-income/income_dashboard")
