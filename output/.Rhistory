TRUE ~ "Other Occupations")) %>%
mutate(Occupation = factor(Occupation, ordered = TRUE,
levels = c(input$checkbox_group, "Other Occupations"))),
aes(fill = Occupation, x = percentile, y = share_quantile)) +
geom_bar(position = "fill", stat = "identity", just = 1) +
geom_vline(xintercept = as.numeric(input$value), linetype="solid", size=0.8) +
ylab("Share of Workers in the Income Bin") +
xlab("Weighted Income Percentile") +
scale_color_viridis(discrete=TRUE) + theme_bw()
)
}
shinyApp(ui, server)
ui <- page_sidebar(
title = "State Occupation Breakdown by Income Threshold",
tags$style("#checkbox_group {font-size:9px;}"),
### U.S. State Selector ###
### Occupation Category Selector ###
sidebar = sidebar(
checkboxGroupInput(
"checkbox_group",
"Select Occupations",
choices = occ_list,
selected = c(
"Chief Executives",
"Other Managers"
)
),
width = validateCssUnit(300)
),
plotOutput("plot"),
### Income Percentile Slider ###
sliderInput("slider", "Slider", min = 0, max = 1, value = 0.95, step = 0.025),
verbatimTextOutput("value")
)
server <- function(input, output) {
output$plot <- renderPlot(
ggplot(hist_occ_data %>%
mutate(Occupation = case_when(occ_category %in% input$checkbox_group ~ occ_category,
TRUE ~ "Other Occupations")) %>%
mutate(Occupation = factor(Occupation, ordered = TRUE,
levels = c(input$checkbox_group, "Other Occupations"))),
aes(fill = Occupation, x = percentile, y = share_quantile)) +
geom_bar(position = "fill", stat = "identity", just = 1) +
geom_vline(xintercept = as.numeric(input$value), linetype="solid", size=0.8) +
ylab("Share of Workers in the Income Bin") +
xlab("Weighted Income Percentile") +
scale_color_viridis(discrete=TRUE) + theme_bw()
)
}
shinyApp(ui, server)
ui <- page_sidebar(
title = "State Occupation Breakdown by Income Threshold",
tags$style("#checkbox_group {font-size:9px;}"),
### U.S. State Selector ###
### Occupation Category Selector ###
sidebar = sidebar(
checkboxGroupInput(
"checkbox_group",
"Select Occupations",
choices = occ_list,
selected = c(
"Chief Executives",
"Other Managers"
)
),
width = validateCssUnit(300)
),
plotOutput("plot"),
### Income Percentile Slider ###
sliderInput("slider", "Slider", min = 0, max = 1, value = 0.95, step = 0.025),
verbatimTextOutput("value")
)
server <- function(input, output) {
print(input$value)
output$plot <- renderPlot(
ggplot(hist_occ_data %>%
mutate(Occupation = case_when(occ_category %in% input$checkbox_group ~ occ_category,
TRUE ~ "Other Occupations")) %>%
mutate(Occupation = factor(Occupation, ordered = TRUE,
levels = c(input$checkbox_group, "Other Occupations"))),
aes(fill = Occupation, x = percentile, y = share_quantile)) +
geom_bar(position = "fill", stat = "identity", just = 1) +
geom_vline(xintercept = as.numeric(input$value), linetype="solid", size=0.8) +
ylab("Share of Workers in the Income Bin") +
xlab("Weighted Income Percentile") +
scale_color_viridis(discrete=TRUE) + theme_bw()
)
}
shinyApp(ui, server)
ui <- page_sidebar(
title = "State Occupation Breakdown by Income Threshold",
tags$style("#checkbox_group {font-size:9px;}"),
### U.S. State Selector ###
### Occupation Category Selector ###
sidebar = sidebar(
checkboxGroupInput(
"checkbox_group",
"Select Occupations",
choices = occ_list,
selected = c(
"Chief Executives",
"Other Managers"
)
),
width = validateCssUnit(300)
),
plotOutput("plot"),
### Income Percentile Slider ###
sliderInput("slider", "Slider", min = 0, max = 1, value = 0.95, step = 0.025),
verbatimTextOutput("value")
)
print(ui)
server <- function(input, output) {
output$plot <- renderPlot(
ggplot(hist_occ_data %>%
mutate(Occupation = case_when(occ_category %in% input$checkbox_group ~ occ_category,
TRUE ~ "Other Occupations")) %>%
mutate(Occupation = factor(Occupation, ordered = TRUE,
levels = c(input$checkbox_group, "Other Occupations"))),
aes(fill = Occupation, x = percentile, y = share_quantile)) +
geom_bar(position = "fill", stat = "identity", just = 1) +
geom_vline(xintercept = as.numeric(input$value), linetype="solid", size=0.8) +
ylab("Share of Workers in the Income Bin") +
xlab("Weighted Income Percentile") +
scale_color_viridis(discrete=TRUE) + theme_bw()
)
}
shinyApp(ui, server)
ui <- page_sidebar(
title = "State Occupation Breakdown by Income Threshold",
tags$style("#checkbox_group {font-size:9px;}"),
### U.S. State Selector ###
### Occupation Category Selector ###
sidebar = sidebar(
checkboxGroupInput(
"checkbox_group",
"Select Occupations",
choices = occ_list,
selected = c(
"Chief Executives",
"Other Managers"
)
),
width = validateCssUnit(300)
),
plotOutput("plot"),
### Income Percentile Slider ###
sliderInput("slider", "Slider", min = 0, max = 1, value = 0.95, step = 0.025),
textOutput("slider")
)
server <- function(input, output) {
output$
output$plot <- renderPlot(
ggplot(hist_occ_data %>%
mutate(Occupation = case_when(occ_category %in% input$checkbox_group ~ occ_category,
TRUE ~ "Other Occupations")) %>%
mutate(Occupation = factor(Occupation, ordered = TRUE,
levels = c(input$checkbox_group, "Other Occupations"))),
aes(fill = Occupation, x = percentile, y = share_quantile)) +
geom_bar(position = "fill", stat = "identity", just = 1) +
geom_vline(xintercept = as.numeric(input$slider), linetype="solid", size=0.8) +
ylab("Share of Workers in the Income Bin") +
xlab("Weighted Income Percentile") +
scale_color_viridis(discrete=TRUE) + theme_bw()
)
}
shinyApp(ui, server)
hist_occ_data <- acs_23_workers %>%
mutate(occ_category = case_when(OCC2010 == 10 ~ "Chief Executives",
OCC2010 <= 20 & OCC2010 <= 430 ~ "Other Managers",
OCC2010 <= 500 & OCC2010 <= 730 ~ "Business Operations Specialists",
OCC2010 <= 800 & OCC2010 <= 950 ~ "Financial Specialists",
OCC2010 >= 1000 & OCC2010 <= 1240 ~ "Computer and Mathematical",
OCC2010 >= 1300 & OCC2010 <= 1540 ~ "Architecture and Engineering",
OCC2010 >= 1600 & OCC2010 <= 1980 ~ "Life, Physical, and Social Science",
OCC2010 <= 2000 & OCC2010 <= 2060 ~ "Community and Social Services",
OCC2010 <= 2100 & OCC2010 <= 2150 ~ "Legal",
OCC2010 <= 2200 & OCC2010 <= 2550 ~ "Education, Training, and Library",
OCC2010 <= 2600 & OCC2010 <= 2920 ~ "Arts, Design, Entertainment, Sports, and Media",
OCC2010 >= 3000 & OCC2010 <= 3540 ~ "Healthcare Practitioners and Technicians",
OCC2010 >= 3600 & OCC2010 <= 3650 ~ "Healthcare Support",
OCC2010 >= 3700 & OCC2010 <= 3950 ~ "Protective Service",
OCC2010 >= 4000 & OCC2010 <= 4150 ~ "Food Preparation and Serving",
OCC2010 >= 4200 & OCC2010 <= 4250 ~ "Building and Grounds Cleaning and Maintenance",
OCC2010 >= 4300 & OCC2010 <= 4650 ~ "Personal Care and Service",
OCC2010 >= 4700 & OCC2010 <= 4965 ~ "Sales and Related",
OCC2010 >= 5000 & OCC2010 <= 5940 ~ "Office and Administrative Support",
OCC2010 >= 6005 & OCC2010 <= 6130 ~ "Farming, Fishing, and Forestry",
OCC2010 >= 6200 & OCC2010 <= 6765 ~ "Construction",
OCC2010 >= 6800 & OCC2010 <= 6940 ~ "Extraction",
OCC2010 >= 7000 & OCC2010 <= 7630 ~ "Installation, Maintenance, and Repair",
OCC2010 >= 7700 & OCC2010 <= 8965 ~ "Production",
OCC2010 >= 9000 & OCC2010 <= 9750 ~ "Transportation and Material Moving",
TRUE ~ "Not Identified"),
quantile = weighted_ntile(INCWAGE, PERWT, 40)) %>%
mutate(occ_category = factor(occ_category, ordered = TRUE, levels = occ_list)) %>%
group_by(state, quantile, occ_category) %>% summarise(occ_weight = sum(PERWT)) %>% ungroup() %>%
mutate(share_quantile = occ_weight / sum(occ_weight), .by = quantile) %>%
mutate(percentile = quantile * 0.025) %>% select(-occ_weight)
View(hist_occ_data)
hist_occ_data <- acs_23_workers %>%
mutate(occ_category = case_when(OCC2010 == 10 ~ "Chief Executives",
OCC2010 <= 20 & OCC2010 <= 430 ~ "Other Managers",
OCC2010 <= 500 & OCC2010 <= 730 ~ "Business Operations Specialists",
OCC2010 <= 800 & OCC2010 <= 950 ~ "Financial Specialists",
OCC2010 >= 1000 & OCC2010 <= 1240 ~ "Computer and Mathematical",
OCC2010 >= 1300 & OCC2010 <= 1540 ~ "Architecture and Engineering",
OCC2010 >= 1600 & OCC2010 <= 1980 ~ "Life, Physical, and Social Science",
OCC2010 <= 2000 & OCC2010 <= 2060 ~ "Community and Social Services",
OCC2010 <= 2100 & OCC2010 <= 2150 ~ "Legal",
OCC2010 <= 2200 & OCC2010 <= 2550 ~ "Education, Training, and Library",
OCC2010 <= 2600 & OCC2010 <= 2920 ~ "Arts, Design, Entertainment, Sports, and Media",
OCC2010 >= 3000 & OCC2010 <= 3540 ~ "Healthcare Practitioners and Technicians",
OCC2010 >= 3600 & OCC2010 <= 3650 ~ "Healthcare Support",
OCC2010 >= 3700 & OCC2010 <= 3950 ~ "Protective Service",
OCC2010 >= 4000 & OCC2010 <= 4150 ~ "Food Preparation and Serving",
OCC2010 >= 4200 & OCC2010 <= 4250 ~ "Building and Grounds Cleaning and Maintenance",
OCC2010 >= 4300 & OCC2010 <= 4650 ~ "Personal Care and Service",
OCC2010 >= 4700 & OCC2010 <= 4965 ~ "Sales and Related",
OCC2010 >= 5000 & OCC2010 <= 5940 ~ "Office and Administrative Support",
OCC2010 >= 6005 & OCC2010 <= 6130 ~ "Farming, Fishing, and Forestry",
OCC2010 >= 6200 & OCC2010 <= 6765 ~ "Construction",
OCC2010 >= 6800 & OCC2010 <= 6940 ~ "Extraction",
OCC2010 >= 7000 & OCC2010 <= 7630 ~ "Installation, Maintenance, and Repair",
OCC2010 >= 7700 & OCC2010 <= 8965 ~ "Production",
OCC2010 >= 9000 & OCC2010 <= 9750 ~ "Transportation and Material Moving",
TRUE ~ "Not Identified"),
quantile = weighted_ntile(INCWAGE, PERWT, 40)) %>%
mutate(occ_category = factor(occ_category, ordered = TRUE, levels = occ_list)) %>%
group_by(state, quantile, occ_category) %>% summarise(occ_weight = sum(PERWT)) %>% ungroup() %>%
mutate(share_quantile = occ_weight / sum(occ_weight), .by = c(state, quantile)) %>%
mutate(percentile = quantile * 0.025) %>% select(-occ_weight)
View(hist_occ_data)
unique(acs_23_workers %>%
mutate(occ_category = case_when(OCC2010 == 10 ~ "Chief Executives",
OCC2010 <= 20 & OCC2010 <= 430 ~ "Other Managers",
OCC2010 <= 500 & OCC2010 <= 730 ~ "Business Operations Specialists",
OCC2010 <= 800 & OCC2010 <= 950 ~ "Financial Specialists",
OCC2010 >= 1000 & OCC2010 <= 1240 ~ "Computer and Mathematical",
OCC2010 >= 1300 & OCC2010 <= 1540 ~ "Architecture and Engineering",
OCC2010 >= 1600 & OCC2010 <= 1980 ~ "Life, Physical, and Social Science",
OCC2010 <= 2000 & OCC2010 <= 2060 ~ "Community and Social Services",
OCC2010 <= 2100 & OCC2010 <= 2150 ~ "Legal",
OCC2010 <= 2200 & OCC2010 <= 2550 ~ "Education, Training, and Library",
OCC2010 <= 2600 & OCC2010 <= 2920 ~ "Arts, Design, Entertainment, Sports, and Media",
OCC2010 >= 3000 & OCC2010 <= 3540 ~ "Healthcare Practitioners and Technicians",
OCC2010 >= 3600 & OCC2010 <= 3650 ~ "Healthcare Support",
OCC2010 >= 3700 & OCC2010 <= 3950 ~ "Protective Service",
OCC2010 >= 4000 & OCC2010 <= 4150 ~ "Food Preparation and Serving",
OCC2010 >= 4200 & OCC2010 <= 4250 ~ "Building and Grounds Cleaning and Maintenance",
OCC2010 >= 4300 & OCC2010 <= 4650 ~ "Personal Care and Service",
OCC2010 >= 4700 & OCC2010 <= 4965 ~ "Sales and Related",
OCC2010 >= 5000 & OCC2010 <= 5940 ~ "Office and Administrative Support",
OCC2010 >= 6005 & OCC2010 <= 6130 ~ "Farming, Fishing, and Forestry",
OCC2010 >= 6200 & OCC2010 <= 6765 ~ "Construction",
OCC2010 >= 6800 & OCC2010 <= 6940 ~ "Extraction",
OCC2010 >= 7000 & OCC2010 <= 7630 ~ "Installation, Maintenance, and Repair",
OCC2010 >= 7700 & OCC2010 <= 8965 ~ "Production",
OCC2010 >= 9000 & OCC2010 <= 9750 ~ "Transportation and Material Moving",
TRUE ~ "Not Identified"),
quantile = weighted_ntile(INCWAGE, PERWT, 40)) %>% .$occ_category)
occ_list_check <- unique(acs_23_workers %>%
mutate(occ_category = case_when(OCC2010 == 10 ~ "Chief Executives",
OCC2010 <= 20 & OCC2010 <= 430 ~ "Other Managers",
OCC2010 <= 500 & OCC2010 <= 730 ~ "Business Operations Specialists",
OCC2010 <= 800 & OCC2010 <= 950 ~ "Financial Specialists",
OCC2010 >= 1000 & OCC2010 <= 1240 ~ "Computer and Mathematical",
OCC2010 >= 1300 & OCC2010 <= 1540 ~ "Architecture and Engineering",
OCC2010 >= 1600 & OCC2010 <= 1980 ~ "Life, Physical, and Social Science",
OCC2010 <= 2000 & OCC2010 <= 2060 ~ "Community and Social Services",
OCC2010 <= 2100 & OCC2010 <= 2150 ~ "Legal",
OCC2010 <= 2200 & OCC2010 <= 2550 ~ "Education, Training, and Library",
OCC2010 <= 2600 & OCC2010 <= 2920 ~ "Arts, Design, Entertainment, Sports, and Media",
OCC2010 >= 3000 & OCC2010 <= 3540 ~ "Healthcare Practitioners and Technicians",
OCC2010 >= 3600 & OCC2010 <= 3650 ~ "Healthcare Support",
OCC2010 >= 3700 & OCC2010 <= 3950 ~ "Protective Service",
OCC2010 >= 4000 & OCC2010 <= 4150 ~ "Food Preparation and Serving",
OCC2010 >= 4200 & OCC2010 <= 4250 ~ "Building and Grounds Cleaning and Maintenance",
OCC2010 >= 4300 & OCC2010 <= 4650 ~ "Personal Care and Service",
OCC2010 >= 4700 & OCC2010 <= 4965 ~ "Sales and Related",
OCC2010 >= 5000 & OCC2010 <= 5940 ~ "Office and Administrative Support",
OCC2010 >= 6005 & OCC2010 <= 6130 ~ "Farming, Fishing, and Forestry",
OCC2010 >= 6200 & OCC2010 <= 6765 ~ "Construction",
OCC2010 >= 6800 & OCC2010 <= 6940 ~ "Extraction",
OCC2010 >= 7000 & OCC2010 <= 7630 ~ "Installation, Maintenance, and Repair",
OCC2010 >= 7700 & OCC2010 <= 8965 ~ "Production",
OCC2010 >= 9000 & OCC2010 <= 9750 ~ "Transportation and Material Moving",
TRUE ~ "Not Identified"),
quantile = weighted_ntile(INCWAGE, PERWT, 40)) %>% .$occ_category)
setdiff(occ_list, occ_list_check)
occ_list_check
occ_list
setdiff(occ_list_check, occ_list)
occ_list <- c("Chief Executives",
"Other Managers",
"Business Operations Specialists",
"Financial Specialists",
"Computer and Mathematical",
"Architecture and Engineering",
"Life, Physical, and Social Science",
"Community and Social Services",
"Legal", "Education, Training, and Library",
"Arts, Design, Entertainment, Sports, and Media",
"Healthcare Practitioners and Technicians",
"Healthcare Support", "Protective Service",
"Food Preparation and Serving",
"Building and Grounds Cleaning and Maintenance",
"Personal Care and Service",
"Sales and Related",
"Office and Administrative Support",
"Farming, Fishing, and Forestry",
"Construction",
"Extraction",
"Installation, Maintenance, and Repair",
"Production",
"Transportation and Material Moving",
"Not Identified")
hist_occ_data <- acs_23_workers %>%
mutate(occ_category = case_when(OCC2010 == 10 ~ "Chief Executives",
OCC2010 <= 20 & OCC2010 <= 430 ~ "Other Managers",
OCC2010 <= 500 & OCC2010 <= 730 ~ "Business Operations Specialists",
OCC2010 <= 800 & OCC2010 <= 950 ~ "Financial Specialists",
OCC2010 >= 1000 & OCC2010 <= 1240 ~ "Computer and Mathematical",
OCC2010 >= 1300 & OCC2010 <= 1540 ~ "Architecture and Engineering",
OCC2010 >= 1600 & OCC2010 <= 1980 ~ "Life, Physical, and Social Science",
OCC2010 <= 2000 & OCC2010 <= 2060 ~ "Community and Social Services",
OCC2010 <= 2100 & OCC2010 <= 2150 ~ "Legal",
OCC2010 <= 2200 & OCC2010 <= 2550 ~ "Education, Training, and Library",
OCC2010 <= 2600 & OCC2010 <= 2920 ~ "Arts, Design, Entertainment, Sports, and Media",
OCC2010 >= 3000 & OCC2010 <= 3540 ~ "Healthcare Practitioners and Technicians",
OCC2010 >= 3600 & OCC2010 <= 3650 ~ "Healthcare Support",
OCC2010 >= 3700 & OCC2010 <= 3950 ~ "Protective Service",
OCC2010 >= 4000 & OCC2010 <= 4150 ~ "Food Preparation and Serving",
OCC2010 >= 4200 & OCC2010 <= 4250 ~ "Building and Grounds Cleaning and Maintenance",
OCC2010 >= 4300 & OCC2010 <= 4650 ~ "Personal Care and Service",
OCC2010 >= 4700 & OCC2010 <= 4965 ~ "Sales and Related",
OCC2010 >= 5000 & OCC2010 <= 5940 ~ "Office and Administrative Support",
OCC2010 >= 6005 & OCC2010 <= 6130 ~ "Farming, Fishing, and Forestry",
OCC2010 >= 6200 & OCC2010 <= 6765 ~ "Construction",
OCC2010 >= 6800 & OCC2010 <= 6940 ~ "Extraction",
OCC2010 >= 7000 & OCC2010 <= 7630 ~ "Installation, Maintenance, and Repair",
OCC2010 >= 7700 & OCC2010 <= 8965 ~ "Production",
OCC2010 >= 9000 & OCC2010 <= 9750 ~ "Transportation and Material Moving",
TRUE ~ "Not Identified"),
quantile = weighted_ntile(INCWAGE, PERWT, 40)) %>%
mutate(occ_category = factor(occ_category, ordered = TRUE, levels = occ_list)) %>%
group_by(state, quantile, occ_category) %>% summarise(occ_weight = sum(PERWT)) %>% ungroup() %>%
mutate(share_quantile = occ_weight / sum(occ_weight), .by = c(state, quantile)) %>%
mutate(percentile = quantile * 0.025) %>% select(-occ_weight)
View(hist_occ_data)
ui <- page_sidebar(
title = "State Occupation Breakdown by Income Threshold",
tags$style("#occupation_selector {font-size:9px;}"),
sidebar = sidebar(
### U.S. State Selector ###
selectizeInput(
"state_selector",
"Select state to view",
choices = state_codes$state,
selected = "NY"
),
### Occupation Category Selector ###
selectizeInput(
"occupation_selector",
"Select occupations",
choices = occ_list,
selected = c(
"Chief Executives",
"Other Managers"
),
multiple = TRUE
),
width = validateCssUnit(300)
),
plotOutput("plot"),
### Income Percentile Slider ###
sliderInput("income_percent", "Slider", min = 0, max = 1, value = 0.95, step = 0.025),
)
server <- function(input, output) {
output$
output$plot <- renderPlot(
ggplot(hist_occ_data %>% filter(state == input$state_selector) %>%
mutate(Occupation = case_when(occ_category %in% input$occupation_selector ~ occ_category,
TRUE ~ "Other Occupations")) %>%
mutate(Occupation = factor(Occupation, ordered = TRUE,
levels = c(input$occupation_selector, "Other Occupations"))),
aes(fill = Occupation, x = percentile, y = share_quantile)) +
geom_bar(position = "fill", stat = "identity", just = 1) +
geom_vline(xintercept = 0.8, linetype="solid", size=0.8) +
ylab("Share of Workers in the Income Bin") +
xlab("Weighted Income Percentile") +
scale_color_viridis(discrete=TRUE) + theme_bw()
)
}
shinyApp(ui, server)
server <- function(input, output) {
output$plot <- renderPlot(
ggplot(hist_occ_data %>% filter(state == input$state_selector) %>%
mutate(Occupation = case_when(occ_category %in% input$occupation_selector ~ occ_category,
TRUE ~ "Other Occupations")) %>%
mutate(Occupation = factor(Occupation, ordered = TRUE,
levels = c(input$occupation_selector, "Other Occupations"))),
aes(fill = Occupation, x = percentile, y = share_quantile)) +
geom_bar(position = "fill", stat = "identity", just = 1) +
geom_vline(xintercept = 0.8, linetype="solid", size=0.8) +
ylab("Share of Workers in the Income Bin") +
xlab("Weighted Income Percentile") +
scale_color_viridis(discrete=TRUE) + theme_bw()
)
}
shinyApp(ui, server)
ui <- page_sidebar(
title = "State Occupation Breakdown by Income Threshold",
sidebar = sidebar(
### U.S. State Selector ###
selectizeInput(
"state_selector",
"Select state to view",
choices = state_codes$state,
selected = "NY"
),
### Occupation Category Selector ###
selectizeInput(
"occupation_selector",
"Select occupations",
choices = occ_list,
selected = c(
"Chief Executives",
"Other Managers"
),
multiple = TRUE
),
),
plotOutput("plot"),
### Income Percentile Slider ###
sliderInput("income_percent", "Slider", min = 0, max = 1, value = 0.95, step = 0.025),
)
server <- function(input, output) {
output$plot <- renderPlot(
ggplot(hist_occ_data %>% filter(state == input$state_selector) %>%
mutate(Occupation = case_when(occ_category %in% input$occupation_selector ~ occ_category,
TRUE ~ "Other Occupations")) %>%
mutate(Occupation = factor(Occupation, ordered = TRUE,
levels = c(input$occupation_selector, "Other Occupations"))),
aes(fill = Occupation, x = percentile, y = share_quantile)) +
geom_bar(position = "fill", stat = "identity", just = 1) +
geom_vline(xintercept = as.numeric(input$income_percent), linetype="solid", size=0.8) +
ylab("Share of Workers in the Income Bin") +
xlab("Weighted Income Percentile") +
scale_color_viridis(discrete=TRUE) + theme_bw()
)
}
shinyApp(ui, server)
server <- function(input, output) {
output$plot <- renderPlot(
ggplot(hist_occ_data %>% filter(state == input$state_selector) %>%
mutate(Occupation = case_when(occ_category %in% input$occupation_selector ~ occ_category,
TRUE ~ "Other Occupations")) %>%
mutate(Occupation = factor(Occupation, ordered = TRUE,
levels = c(input$occupation_selector, "Other Occupations"))),
aes(fill = Occupation, x = percentile, y = share_quantile)) +
geom_bar(position = "fill", stat = "identity", just = 1) +
geom_vline(xintercept = as.numeric(input$income_percent), linetype="solid", size=0.8) +
geom_text(aes(x = as.numeric(input$income_percent) - 0.02, y = 1.05,
label = paste0(as.character(as.numeric(input$income_percent) * 100), "%")),
angle = 90, stat = "unique", size = 2) +
ylab("Share of Workers in the Income Bin") +
xlab("Weighted Income Percentile") +
scale_color_viridis(discrete=TRUE) + theme_bw()
)
}
shinyApp(ui, server)
server <- function(input, output) {
output$plot <- renderPlot(
ggplot(hist_occ_data %>% filter(state == input$state_selector) %>%
mutate(Occupation = case_when(occ_category %in% input$occupation_selector ~ occ_category,
TRUE ~ "Other Occupations")) %>%
mutate(Occupation = factor(Occupation, ordered = TRUE,
levels = c(input$occupation_selector, "Other Occupations"))),
aes(fill = Occupation, x = percentile, y = share_quantile)) +
geom_bar(position = "fill", stat = "identity", just = 1) +
geom_vline(xintercept = as.numeric(input$income_percent), linetype="solid", size=0.8) +
geom_text(aes(x = as.numeric(input$income_percent) - 0.02, y = 1.05,
label = paste0(as.character(as.numeric(input$income_percent) * 100), "%")),
angle = 90, stat = "unique", size = 3) +
ylab("Share of Workers in the Income Bin") +
xlab("Weighted Income Percentile") +
scale_color_viridis(discrete=TRUE) + theme_bw()
)
}
shinyApp(ui, server)
server <- function(input, output) {
output$plot <- renderPlot(
ggplot(hist_occ_data %>% filter(state == input$state_selector) %>%
mutate(Occupation = case_when(occ_category %in% input$occupation_selector ~ occ_category,
TRUE ~ "Other Occupations")) %>%
mutate(Occupation = factor(Occupation, ordered = TRUE,
levels = c(input$occupation_selector, "Other Occupations"))),
aes(fill = Occupation, x = percentile, y = share_quantile)) +
geom_bar(position = "fill", stat = "identity", just = 1) +
geom_vline(xintercept = as.numeric(input$income_percent), linetype="solid", size=0.8) +
geom_text(aes(x = as.numeric(input$income_percent) - 0.02, y = 1.05,
label = paste0(as.character(as.numeric(input$income_percent) * 100), "%")),
stat = "unique", size = 3) +
ylab("Share of Workers in the Income Bin") +
xlab("Weighted Income Percentile") +
scale_color_viridis(discrete=TRUE) + theme_bw()
)
}
shinyApp(ui, server)
runApp('~/Documents/projects/noncompete-income/code/02. RShiny Dashboard.R')
runApp('~/Documents/projects/noncompete-income/code/02. RShiny Dashboard.R')
